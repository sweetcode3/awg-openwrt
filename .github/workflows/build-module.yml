name: Create Release on Tag

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v18.06 - mips_siflower :: siflower/sf19a28 build"
    runs-on: ubuntu-latest

    env:
      TAG: "18.06"
      PKGARCH: "mips_siflower"
      TARGET: "siflower"
      SUBTARGET: "sf19a28"
      VERMAGIC: "4.14.90"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v18.06
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        with:
          path: build_dir
          key: ${{ runner.os }}-build-vm4-18.06-mips_siflower-siflower-sf19a28
          restore-keys: |
            ${{ runner.os }}-build-vm4-cache-tools-kernel-18.06-mips_siflower-

      - name: Building kernel and tools
        run: |
          echo "pkgarch: ${{ env.PKGARCH }}, target: ${{ env.TARGET }}, subtarget: ${{ env.SUBTARGET }}"
          # Setup & install feeds
          wget https://downloads.openwrt.org/releases/${{ env.TAG }}/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a
          # Setup config with AWG and dependencies
          wget https://downloads.openwrt.org/releases/${{ env.TAG }}/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config
          make defconfig
          echo "    > make tools/install"
          make tools/install -i -j `nproc`
          cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true
          echo "    > make toolchain/install"
          make toolchain/install -i -j `nproc`
          cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true
          # Compile kernel module
          echo "    > make target/linux/compile"
          make target/linux/compile -i -j `nproc` V=s
          VERMAGIC_ACTUAL=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
          if [ "$VERMAGIC_ACTUAL" != "${{ env.VERMAGIC }}" ]; then
            echo Vermagic mismatch: $VERMAGIC_ACTUAL, expected ${{ env.VERMAGIC }}
            exit 1
          fi

      - name: Build AmneziaWG
        run: |
          VERMAGIC_ACTUAL=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC_ACTUAL"
          if [ "$VERMAGIC_ACTUAL" != "${{ env.VERMAGIC }}" ]; then
            echo Vermagic mismatch: $VERMAGIC_ACTUAL, expected ${{ env.VERMAGIC }}
            exit 1
          fi
          # Ignore kmod build for some targets, replace with the awg-go
          make package/kmod-amneziawg/{clean,download,prepare} V=s || true
          make package/kmod-amneziawg/compile V=s || true
          make package/luci-app-amneziawg/{clean,download,prepare}
          make package/luci-app-amneziawg/compile V=s
          make V=s package/amneziawg-tools/{clean,download,prepare}
          make V=s package/amneziawg-tools/compile

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ env.TAG }}_${{ env.PKGARCH }}_${{ env.TARGET }}_${{ env.SUBTARGET }}"
          cp bin/packages/${{ env.PKGARCH }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ env.PKGARCH }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
